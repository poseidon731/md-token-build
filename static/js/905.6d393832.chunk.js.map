{"version":3,"file":"static/js/905.6d393832.chunk.js","mappings":"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","sources":["pages/MyWallet/CollectCard.tsx","pages/MyWallet/MyWallet.styled.ts","pages/MyWallet/MyWallet.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Image = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 25px;\r\n  margin-bottom: 24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 112px;\r\n    height: 112px;\r\n  }\r\n`;\r\n\r\nconst CardText = styled.h6`\r\n  font-size: 28px;\r\n  color: white;\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  width: 200px;\r\n  @media screen and (max-width: 425px) {\r\n    width: 45%;\r\n  }\r\n`;\r\n\r\ninterface CollectCardProps {\r\n  src: string;\r\n  name: string;\r\n  rank?: string;\r\n}\r\n\r\nconst CollectCard = ({ src, name, rank }: CollectCardProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Image className=\"card-img\" src={src} alt={name} />\r\n      <CardText>{name}</CardText>\r\n      {rank && <CardText>Rank #{rank}</CardText>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CollectCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageWrapper = styled.div`\r\n  max-width: 1100px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 60px;\r\n    padding: 0 35px;\r\n    .page-title {\r\n      font-size: 36px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    padding: 0;\r\n    .page-title {\r\n      justify-content: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background-color: #e2ae39;\r\n  margin-left: 20px;\r\n  img {\r\n    width: 100%;\r\n  }\r\n  &:hover {\r\n    background-color: #e2ae39;\r\n  }\r\n  @media screen and (max-width: 425px) {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-left: 15px;\r\n  }\r\n`;\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  padding-bottom: 48px;\r\n  border-bottom: 1px solid #fff;\r\n  margin-bottom: 110px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    flex-flow: column;\r\n    align-items: center;\r\n    margin-bottom: 50px;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    margin-bottom: 44px;\r\n  }\r\n`;\r\n\r\nexport const WalletTokenView = styled.div`\r\n  padding: 25px 40px;\r\n  background: #e2ae39;\r\n  border-radius: 10px;\r\n\r\n  .amount-title {\r\n    color: #fff;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n\r\n    @media screen and (max-width: 991px) {\r\n      font-size: 24px;\r\n    }\r\n  }\r\n\r\n  .amount-value {\r\n    font-size: 64px;\r\n    color: #000;\r\n    margin: 0;\r\n    text-align: center;\r\n    font-weight: 700;\r\n\r\n    @media screen and (max-width: 991px) {\r\n      font-size: 36px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 991px) {\r\n    width: 328px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    padding: 21px 12px;\r\n    text-align: center;\r\n    &:first-of-type {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 425px) {\r\n    width: 295px;\r\n  }\r\n`;\r\n\r\nexport const CollectCardRow = styled.div`\r\n  display: flex !important;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n  gap: 40px 56px;\r\n  width: 968px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 255px;\r\n    gap: 40px 31px;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    width: 100%;\r\n    justify-content: space-around;\r\n    gap: 40px 0;\r\n  }\r\n`;\r\n\r\nexport const CollectionWrapper = styled.div`\r\n  padding-bottom: 40px;\r\n  border-bottom: 1px solid #fff;\r\n  margin-bottom: 50px;\r\n\r\n  h6 {\r\n    word-break: break-all;\r\n  }\r\n\r\n  &:last-of-type {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useMedia } from 'react-use';\r\nimport { PageTitle, H2, H5, H6 } from '../../components/common/Typography';\r\nimport {\r\n  PageWrapper,\r\n  HeaderWrapper,\r\n  WalletTokenView,\r\n  CollectCardRow,\r\n  CollectionWrapper,\r\n  Button\r\n} from './MyWallet.styled';\r\nimport { useWalletConnect } from '../../hooks/WalletConnect';\r\nimport CollectCard from './CollectCard';\r\nimport Slick, { Settings } from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport axios from 'axios';\r\n\r\ninterface NFTAssets {\r\n  asset: string;\r\n  image: string;\r\n  name: string;\r\n  rank?: string;\r\n}\r\n\r\ninterface NFTDataProps {\r\n  name: string;\r\n  id: string;\r\n  data: NFTAssets[];\r\n}\r\n\r\nconst policyIdData = [\r\n  {\r\n    name: 'MD LICENSE',\r\n    id: '757d6d0b72beba043054f920156b396db16e4f2492c6cec089ebd608'\r\n  },\r\n  {\r\n    name: 'Dog Collection',\r\n    id: '7e605894cdcbe8d1933f0a8760d93bd121aca583cf21ad1c25e51fd3'\r\n  },\r\n  {\r\n    name: 'Car Collection',\r\n    id: '0414065c7a2bbf91b876449384ba68a17aec83e8e08ab919262225ed'\r\n  },\r\n  {\r\n    name: 'Bad Fox Motorcycle Club',\r\n    id: 'fa669150ad134964e86b2fa7275a12072f61b438d0d44204d3a2f967'\r\n  },\r\n  {\r\n    name: 'Baby Alien Club ',\r\n    id: '15509d4cb60f066ca4c7e982d764d6ceb4324cb33776d1711da1beee'\r\n  },\r\n  {\r\n    name: 'ThoseAMA',\r\n    id: '94a0f0ec45d2347dcc4fb364ab7432f4e15c38cc0af1787b1a60e401'\r\n  },\r\n  {\r\n    name: 'Space Ape Club\t',\r\n    id: 'ee6da4b71e0913cbebec02edc23653f9b970af69324fdddfed1285d9'\r\n  },\r\n  {\r\n    name: 'Ape Nation',\r\n    id: '58b9f55e6ea9828dea7a8d9f49420171c6360f99b5e6e86de5fdb644'\r\n  },\r\n  {\r\n    name: 'Claypez',\r\n    id: 'bd30c07bed903332937dcf328e2bd6da5aec1e686c13e8c5f2c99e48'\r\n  },\r\n  {\r\n    name: 'Virtua',\r\n    id: '3956f6646614ee82a16b9e636d5cd3d54c09fe20389c9615f5b06c1e'\r\n  },\r\n  {\r\n    name: 'Disco Solaris',\r\n    id: 'd0112837f8f856b2ca14f69b375bc394e73d146fdadcc993bb993779'\r\n  },\r\n  {\r\n    name: 'Salty Seagulls Society',\r\n    id: '5329a9b87459e1df8e86ce56bae4b3770862c0969011e6faf474b65f'\r\n  }\r\n];\r\n\r\nconst splitArrayToChunks = (arr: Array<any>, size: number) => {\r\n  const max = Math.ceil(arr.length / size);\r\n  const result = [];\r\n  for (let i = 0; i < max; i++) {\r\n    result.push(arr.slice(i * size, (i + 1) * size));\r\n  }\r\n  return result;\r\n};\r\n\r\nconst settings: Settings = {\r\n  dots: true,\r\n  infinite: false,\r\n  lazyLoad: 'ondemand',\r\n  speed: 500,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1\r\n};\r\n\r\n// let flag = false;\r\n\r\nconst MyWalletPage = () => {\r\n  const [tokenAmount, setTokenAmount] = useState(0);\r\n  const [totalAccumulated, setTotalAccumulated] = useState(0);\r\n  const [nftData, setNftData] = useState<NFTDataProps[] | []>([]);\r\n  const { myWalletAddress } = useWalletConnect();\r\n\r\n  const fetchTotalAccumulated = useCallback(async () => {\r\n    if (myWalletAddress) {\r\n      const { data } = await axios.get(\r\n        `https://bobbmv5hi5.execute-api.eu-west-2.amazonaws.com/default/MDCC-totalRewardsREST?address=${myWalletAddress}`\r\n      );\r\n\r\n      setTotalAccumulated(data.rewards / 100000000);\r\n    }\r\n  }, [myWalletAddress]);\r\n\r\n  const fetchMDTokens = useCallback(async () => {\r\n    if (myWalletAddress) {\r\n      const { data } = await axios.get(\r\n        `https://h9fxd002x6.execute-api.eu-west-2.amazonaws.com/default/getMDCC-tokensInWallet?address=${myWalletAddress}`\r\n      );\r\n\r\n      setTokenAmount(data.amount / 100000000);\r\n    }\r\n  }, [myWalletAddress]);\r\n\r\n  const getAllCollections = useCallback(async () => {\r\n    if (myWalletAddress) {\r\n      const basicData = nftData;\r\n\r\n      policyIdData.map(async (item) => {\r\n        let page = 1,\r\n          data = {};\r\n        const arr: NFTAssets[] = [];\r\n        do {\r\n          data = await axios.get(\r\n            `https://brefcjavvi.execute-api.eu-west-2.amazonaws.com/default/MDDC-getNFTs-all?address=${myWalletAddress}&page=${page}&policy=${item.id}`\r\n          );\r\n\r\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n          // @ts-ignore\r\n          data = data.data;\r\n          if (Object.values(data).length) {\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            // @ts-ignore\r\n            arr.push(...Object.values(data));\r\n\r\n            if (basicData.length) {\r\n              if (basicData.find((nftItem: NFTDataProps) => nftItem.id == item.id)) {\r\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                // @ts-ignore\r\n                basicData.data.push(...arr);\r\n\r\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                // @ts-ignore\r\n                setNftData(data);\r\n              } else {\r\n                const obj: NFTDataProps = {\r\n                  name: item.name,\r\n                  id: item.id,\r\n                  data: arr\r\n                };\r\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                // @ts-ignore\r\n                basicData.push(obj);\r\n                setNftData([...basicData]);\r\n              }\r\n            } else {\r\n              const obj: NFTDataProps = {\r\n                name: item.name,\r\n                id: item.id,\r\n                data: arr\r\n              };\r\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n              // @ts-ignore\r\n              basicData.push(obj);\r\n              setNftData([...basicData]);\r\n            }\r\n          }\r\n          page++;\r\n        } while (Object.values(data).length);\r\n      });\r\n    }\r\n  }, [myWalletAddress]);\r\n\r\n  const getAllData = useCallback(() => {\r\n    getAllCollections();\r\n    fetchMDTokens();\r\n    fetchTotalAccumulated();\r\n  }, [myWalletAddress]);\r\n\r\n  useEffect(() => {\r\n    if (myWalletAddress) getAllData();\r\n  }, [myWalletAddress]);\r\n\r\n  const isMobile = useMedia('(max-width: 425px)');\r\n  return (\r\n    <div className=\"page\">\r\n      <PageWrapper>\r\n        <PageTitle textAlign=\"left\" className=\"page-title d-flex align-items-center\">\r\n          MY WALLET\r\n          <Button className=\"btn p-0 border-0 outline-0\" onClick={getAllData}>\r\n            <img src=\"/assets/images/refresh.svg\" alt=\"refresh-icon\" />\r\n          </Button>\r\n        </PageTitle>\r\n        <HeaderWrapper>\r\n          <WalletTokenView>\r\n            <H5 className=\"amount-title\">TOTAL ACCUMULATED:</H5>\r\n            <H2 className=\"amount-value\">{totalAccumulated.toFixed(8)}</H2>\r\n          </WalletTokenView>\r\n          <WalletTokenView>\r\n            <H5 className=\"amount-title\">TOTAL MD TOKENS:</H5>\r\n            <H2 className=\"amount-value\">{tokenAmount.toFixed(8)}</H2>\r\n          </WalletTokenView>\r\n        </HeaderWrapper>\r\n        {!!nftData.length &&\r\n          nftData.map((nftCollection, index) => (\r\n            <CollectionWrapper key={index}>\r\n              <H5>POLICY ID: {nftCollection.name}</H5>\r\n              <H6>{nftCollection.id}</H6>\r\n              <div className=\"mt-5\">\r\n                <Slick {...settings}>\r\n                  {splitArrayToChunks(nftCollection.data, isMobile ? 4 : 8).map((chunk, idx) => (\r\n                    <div key={idx}>\r\n                      <CollectCardRow>\r\n                        {chunk.map((item, id) => {\r\n                          let imageId: string;\r\n                          if (typeof item.image == 'object') {\r\n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                            // @ts-ignore\r\n                            imageId = item.image[0].replaceAll('ipfs://', '');\r\n                          } else {\r\n                            imageId = item.image.replaceAll('ipfs://', '');\r\n                          }\r\n                          return (\r\n                            <CollectCard\r\n                              key={id}\r\n                              src={`https://gateway.ipfs.io/ipfs/${imageId}`}\r\n                              name={item.name}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </CollectCardRow>\r\n                    </div>\r\n                  ))}\r\n                </Slick>\r\n              </div>\r\n            </CollectionWrapper>\r\n          ))}\r\n      </PageWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyWalletPage;\r\n"],"names":["Image","styled","CardText","Wrapper","src","name","rank","className","alt","PageWrapper","Button","HeaderWrapper","WalletTokenView","CollectCardRow","CollectionWrapper","policyIdData","id","splitArrayToChunks","arr","size","max","Math","ceil","length","result","i","push","slice","settings","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","useState","tokenAmount","setTokenAmount","totalAccumulated","setTotalAccumulated","nftData","setNftData","myWalletAddress","useWalletConnect","fetchTotalAccumulated","useCallback","axios","data","rewards","fetchMDTokens","amount","getAllCollections","basicData","map","item","page","Object","values","find","nftItem","obj","getAllData","useEffect","isMobile","useMedia","textAlign","onClick","H5","H2","toFixed","nftCollection","index","H6","chunk","idx","imageId","image","replaceAll"],"sourceRoot":""}